services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api_1
      - api_2
      - api_3
    networks:
      - energy_network
    restart: unless-stopped
    
  influxdb-init:
    image: influxdb:2.7
    depends_on:
      influxdb:
        condition: service_healthy
    environment:
      - INFLUXDB_ORG=energy_org
      - INFLUXDB_BUCKET=energy_metrics
      - INFLUXDB_TOKEN=energy_token
    volumes:
      - ./scripts/init-influx.sh:/init-influx.sh
    command: /bin/bash /init-influx.sh
    networks:
      - energy_network

  api_1:
    build: .
    entrypoint: ["/app/scripts/entrypoint.sh"]
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 1
    environment:
      - APP_NAME=Scalable Async Energy API
      - VERSION=1.0.0
      - DEBUG=false
      - HOST=0.0.0.0
      - PORT=8000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=energy_db
      - DB_USER=energy_user
      - DB_PASSWORD=energy_pass
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - INFLUXDB_HOST=influxdb
      - INFLUXDB_TOKEN=energy_token
      - INFLUXDB_ORG=energy_org
      - INFLUXDB_BUCKET=energy_metrics
      - LOG_LEVEL=INFO
      - MONITORING_ENABLED=true
    depends_on:
      - postgres
      - redis
      - influxdb-init
    volumes:
      - ./data:/app/data
    networks:
      - energy_network
    restart: unless-stopped

  api_2:
    build: .
    entrypoint: ["/app/scripts/entrypoint.sh"]
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 1
    environment:
      - APP_NAME=Scalable Async Energy API
      - VERSION=1.0.0
      - DEBUG=false
      - HOST=0.0.0.0
      - PORT=8000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=energy_db
      - DB_USER=energy_user
      - DB_PASSWORD=energy_pass
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - INFLUXDB_HOST=influxdb
      - INFLUXDB_TOKEN=energy_token
      - INFLUXDB_ORG=energy_org
      - INFLUXDB_BUCKET=energy_metrics
      - LOG_LEVEL=INFO
      - MONITORING_ENABLED=true
    depends_on:
      - postgres
      - redis
      - influxdb-init
    volumes:
      - ./data:/app/data
    networks:
      - energy_network
    restart: unless-stopped

  api_3:
    build: .
    entrypoint: ["/app/scripts/entrypoint.sh"]
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 1
    environment:
      - APP_NAME=Scalable Async Energy API
      - VERSION=1.0.0
      - DEBUG=false
      - HOST=0.0.0.0
      - PORT=8000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=energy_db
      - DB_USER=energy_user
      - DB_PASSWORD=energy_pass
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - INFLUXDB_HOST=influxdb
      - INFLUXDB_TOKEN=energy_token
      - INFLUXDB_ORG=energy_org
      - INFLUXDB_BUCKET=energy_metrics
      - LOG_LEVEL=INFO
      - MONITORING_ENABLED=true
    depends_on:
      - postgres
      - redis
      - influxdb-init
    volumes:
      - ./data:/app/data
    networks:
      - energy_network
    restart: unless-stopped

  worker_1:
    build: .
    command: celery -A config.celery:app worker --loglevel=info --concurrency=4 --max-tasks-per-child=1000
    environment:
      - APP_NAME=Scalable Async Energy API Worker
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=energy_db
      - DB_USER=energy_user
      - DB_PASSWORD=energy_pass
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - INFLUXDB_HOST=influxdb
      - INFLUXDB_TOKEN=energy_token
      - INFLUXDB_ORG=energy_org
      - INFLUXDB_BUCKET=energy_metrics
      - LOG_LEVEL=INFO
      - MONITORING_ENABLED=true
    depends_on:
      - postgres
      - redis
      - influxdb-init
    volumes:
      - ./data:/app/data
    networks:
      - energy_network
    restart: unless-stopped

  worker_2:
    build: .
    command: celery -A config.celery:app worker --loglevel=info --concurrency=4 --max-tasks-per-child=1000
    environment:
      - APP_NAME=Scalable Async Energy API Worker
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=energy_db
      - DB_USER=energy_user
      - DB_PASSWORD=energy_pass
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - INFLUXDB_HOST=influxdb
      - INFLUXDB_TOKEN=energy_token
      - INFLUXDB_ORG=energy_org
      - INFLUXDB_BUCKET=energy_metrics
      - LOG_LEVEL=INFO
      - MONITORING_ENABLED=true
    depends_on:
      - postgres
      - redis
      - influxdb-init
    volumes:
      - ./data:/app/data
    networks:
      - energy_network
    restart: unless-stopped

  worker_3:
    build: .
    command: celery -A config.celery:app worker --loglevel=info --concurrency=4 --max-tasks-per-child=1000
    environment:
      - APP_NAME=Scalable Async Energy API Worker
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=energy_db
      - DB_USER=energy_user
      - DB_PASSWORD=energy_pass
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - INFLUXDB_HOST=influxdb
      - INFLUXDB_TOKEN=energy_token
      - INFLUXDB_ORG=energy_org
      - INFLUXDB_BUCKET=energy_metrics
      - LOG_LEVEL=INFO
      - MONITORING_ENABLED=true
    depends_on:
      - postgres
      - redis
      - influxdb-init
    volumes:
      - ./data:/app/data
    networks:
      - energy_network
    restart: unless-stopped

  beat:
    build: .
    command: celery -A config.celery:app beat --loglevel=info
    environment:
      - APP_NAME=Scalable Async Energy API Scheduler
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=energy_db
      - DB_USER=energy_user
      - DB_PASSWORD=energy_pass
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - INFLUXDB_HOST=influxdb
      - INFLUXDB_TOKEN=energy_token
      - INFLUXDB_ORG=energy_org
      - INFLUXDB_BUCKET=energy_metrics
      - LOG_LEVEL=INFO
      - DATA_RETENTION_DAYS=90
    depends_on:
      - postgres
      - redis
      - influxdb-init
    volumes:
      - ./data:/app/data
    networks:
      - energy_network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: energy_db
      POSTGRES_USER: energy_user
      POSTGRES_PASSWORD: energy_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - energy_network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: >
      redis-server 
      --appendonly yes 
      --maxmemory 512mb 
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    networks:
      - energy_network
    restart: unless-stopped

  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=password123
      - DOCKER_INFLUXDB_INIT_ORG=energy_org
      - DOCKER_INFLUXDB_INIT_BUCKET=energy_metrics
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=energy_token
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - energy_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  influxdb_data:

networks:
  energy_network:
    driver: bridge